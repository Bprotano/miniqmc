# Check compiler version
SET(INTEL_COMPILER 1)
IF ( CMAKE_CXX_COMPILER_VERSION VERSION_LESS 15.0 )
MESSAGE(FATAL_ERROR "Requires Intel 15.0 or higher ")
ENDIF()

# Enable OpenMP
IF(QMC_OMP)
  SET(ENABLE_OPENMP 1)
  IF ( CMAKE_CXX_COMPILER_VERSION VERSION_LESS 16 )
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -openmp")
  ELSE()
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -qopenmp")
  ENDIF()
ENDIF(QMC_OMP)

# Suppress compile warnings
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated")

# Set extra optimization specific flags
SET( CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -restrict -unroll -ip" )
SET( CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -restrict -unroll -ip" )
SET( CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -restrict -unroll -ip" )

# Use deprecated options prior to 11.1
SET(ICC_DEPRECATED_OPTS FALSE)
IF ( CMAKE_CXX_COMPILER_VERSION VERSION_LESS 11.1 )
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -prefetch" )
ELSEIF(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 16 )  
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -opt-prefetch" )
ELSE()
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -qopt-prefetch" )
ENDIF()

#check if -ftz is accepted
CHECK_CXX_COMPILER_FLAG( "${CMAKE_CXX_FLAGS} -ftz" INTEL_FTZ )
IF( INTEL_FTZ)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ftz" )
ENDIF( INTEL_FTZ)

#------------------------
# Not on Cray's machine
#------------------------
IF(NOT $ENV{CRAYPE_VERSION} MATCHES ".")

#check if the user has already specified -x option for cross-compiling.
if(CMAKE_CXX_FLAGS MATCHES "-x" OR CMAKE_CXX_FLAGS MATCHES "-ax")
else() #(CMAKE_CXX_FLAGS MATCHES "-x" OR CMAKE_CXX_FLAGS MATCHES "-ax")
  #check if -xHost is accepted
  CHECK_CXX_COMPILER_FLAG( "-xHost" INTEL_CXX_FLAGS )
  IF(INTEL_CXX_FLAGS)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -xHost")
  ENDIF(INTEL_CXX_FLAGS)
endif() #(CMAKE_CXX_FLAGS MATCHES "-x" OR CMAKE_CXX_FLAGS MATCHES "-ax")

ENDIF(NOT $ENV{CRAYPE_VERSION} MATCHES ".")
